package uz.gita.newsapp_practice.presenter.screens.main.componentsimport androidx.compose.foundation.Imageimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material.Cardimport androidx.compose.material.MaterialThemeimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.clipimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.layout.ContentScaleimport androidx.compose.ui.res.painterResourceimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport coil.compose.AsyncImageimport uz.gita.newsapp_practice.Rimport uz.gita.newsapp_practice.data.source.remote.response.category.CategorySourceimport uz.gita.newsapp_practice.domain.models.CategoryParam@Composablefun MainItems(    data: CategoryParam = CategoryParam("", "", "", "", CategorySource("", ""), "", "", ""),    onClick: () -> Unit,) {    Column(modifier = Modifier.fillMaxSize()) {        Card(            modifier = Modifier                .fillMaxWidth()                .clickable { onClick() }                .clip(RoundedCornerShape(10.dp))                .padding(horizontal = 30.dp, vertical = 10.dp),        ) {            Box(                modifier = Modifier                    .background(Color.White)            ) {                Image(                    painter = painterResource(id = R.drawable.img_placeholder), contentDescription = "",                    contentScale = ContentScale.Crop,                    modifier = Modifier                        .fillMaxWidth()                        .height(200.dp)                        .align(Alignment.Center)                        .clip(RoundedCornerShape(10.dp)),                )                AsyncImage(                    model = data.urlToImage ?: "",                    contentDescription = "",                    contentScale = ContentScale.Crop,                    modifier = Modifier                        .fillMaxWidth()                        .height(200.dp)                        .align(Alignment.Center)                        .clip(RoundedCornerShape(10.dp)),                )                Column(                    modifier = Modifier                        .align(Alignment.BottomStart)                        .padding(15.dp)                ) {                    Text(                        text = data.title ?: "",                        style = MaterialTheme.typography.h6,                        color = Color.White,                        fontWeight = FontWeight.Bold                    )                    Text(                        text = data.publishedAt ?: "",                        style = MaterialTheme.typography.body2,                        color = Color.White,                        fontWeight = FontWeight.Normal,                        modifier = Modifier.padding(0.dp, 8.dp, 0.dp, 0.dp)                    )                }            }        }    }}