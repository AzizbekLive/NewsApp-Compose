package uz.gita.newsapp_practice.diimport dagger.Bindsimport dagger.Moduleimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport uz.gita.newsapp_practice.presenter.screens.detail.news.NewsDirectionimport uz.gita.newsapp_practice.presenter.screens.detail.news.NewsDirectionImplimport uz.gita.newsapp_practice.presenter.screens.detail.slider.SliderDirectionimport uz.gita.newsapp_practice.presenter.screens.detail.slider.SliderDirectionImplimport uz.gita.newsapp_practice.presenter.screens.intro.IntroDirectionimport uz.gita.newsapp_practice.presenter.screens.intro.IntroDirectionImplimport uz.gita.newsapp_practice.presenter.screens.main.MainDirectionimport uz.gita.newsapp_practice.presenter.screens.main.MainDirectionImplimport uz.gita.newsapp_practice.presenter.screens.splash.SplashDirectionimport uz.gita.newsapp_practice.presenter.screens.splash.SplashDirectionImplimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)interface DirectionModule {    @[Binds Singleton]    fun bindsSplashScreenDirection(impl: SplashDirectionImpl): SplashDirection    @[Binds Singleton]    fun bindsMainScreenDirection(impl: MainDirectionImpl): MainDirection    @[Binds Singleton]    fun bindsIntroScreenDirection(impl: IntroDirectionImpl): IntroDirection    @[Binds Singleton]    fun bindsNewsScreenDirection(impl: NewsDirectionImpl): NewsDirection    @[Binds Singleton]    fun bindsSliderScreenDirection(impl: SliderDirectionImpl): SliderDirection}